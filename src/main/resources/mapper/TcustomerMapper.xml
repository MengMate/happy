        <?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper
                PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
                "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


        <!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Tcustomer">

<resultMap id="RM.Tcustomer" type="com.mam.model.Tcustomer">
    <result property="id" column="ID"/>
    <result property="name" column="NAME"/>
    <result property="age" column="AGE"/>
    <result property="sex" column="SEX"/>
    <result property="nickname" column="NICKNAME"/>
    <result property="mobilephone" column="MOBILEPHONE"/>
    <result property="address" column="ADDRESS"/>
    <result property="city" column="CITY"/>
    <result property="country" column="COUNTRY"/>
    <result property="province" column="PROVINCE"/>
    <result property="img" column="IMG"/>
    <result property="createdate" column="CREATEDATE"/>
    <result property="updatedate" column="UPDATEDATE"/>
</resultMap>

        <!-- 用于select查询公用抽取的列 -->
<sql id="Tcustomer.columns">
<![CDATA[
		ID,NAME,AGE,SEX,NICKNAME,MOBILEPHONE,ADDRESS,CITY,COUNTRY,PROVINCE,IMG,CREATEDATE,UPDATEDATE
	    ]]>
</sql>

        <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
<insert id="Tcustomer.insert" useGeneratedKeys="true" keyProperty="id">
<![CDATA[
        INSERT INTO t_customer (
         ID, NAME, AGE, SEX, NICKNAME, MOBILEPHONE, ADDRESS, CITY, COUNTRY, PROVINCE, IMG, CREATEDATE, UPDATEDATE
        ) VALUES (
         #{id}, #{name}, #{age}, #{sex}, #{nickname}, #{mobilephone}, #{address}, #{city}, #{country}, #{province}, #{img}, #{createdate}, #{updatedate}        
        )
    ]]>
<!--
    oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL
    DB2: order="BEFORE"" values nextval for sequenceName
<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
    SELECT sequenceName.nextval AS ID FROM DUAL
</selectKey>
-->
</insert>

<update id="Tcustomer.update">
<![CDATA[
        UPDATE t_customer SET
	        NAME = #{name} , AGE = #{age} , SEX = #{sex} , NICKNAME = #{nickname} , MOBILEPHONE = #{mobilephone} , ADDRESS = #{address} , CITY = #{city} , COUNTRY = #{country} , PROVINCE = #{province} , IMG = #{img} , CREATEDATE = #{createdate} , UPDATEDATE = #{updatedate}  
        WHERE 
        	ID = #{id}  	        
    ]]>
</update>

<delete id="Tcustomer.delete">
<![CDATA[
        DELETE FROM t_customer WHERE
        ID = #{id} 
    ]]>
</delete>

<select id="Tcustomer.getById" resultMap="RM.Tcustomer">
SELECT
<include refid="Tcustomer.columns"/>
<![CDATA[
		    FROM t_customer 
	        WHERE 
		        ID = #{id} 
	    ]]>
</select>

<sql id="Tcustomer.findPage.where">
<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
<where>
    <if test="@Ognl@isNotEmpty(id)">
        AND ID =#{id}
    </if>
    <if test="@Ognl@isNotEmpty(name)">
        AND NAME =#{name}
    </if>
    <if test="@Ognl@isNotEmpty(age)">
        AND AGE =#{age}
    </if>
    <if test="@Ognl@isNotEmpty(sex)">
        AND SEX =#{sex}
    </if>
    <if test="@Ognl@isNotEmpty(nickname)">
        AND NICKNAME =#{nickname}
    </if>
    <if test="@Ognl@isNotEmpty(mobilephone)">
        AND MOBILEPHONE =#{mobilephone}
    </if>
    <if test="@Ognl@isNotEmpty(address)">
        AND ADDRESS =#{address}
    </if>
    <if test="@Ognl@isNotEmpty(city)">
        AND CITY =#{city}
    </if>
    <if test="@Ognl@isNotEmpty(country)">
        AND COUNTRY =#{country}
    </if>
    <if test="@Ognl@isNotEmpty(province)">
        AND PROVINCE =#{province}
    </if>
    <if test="@Ognl@isNotEmpty(img)">
        AND IMG =#{img}
    </if>
    <if test="@Ognl@isNotEmpty(createdateBegin)">
        AND CREATEDATE >=#{createdateBegin}
    </if>
    <if test="@Ognl@isNotEmpty(createdateEnd)">
        AND CREATEDATE &lt;=#{createdateEnd}
    </if>
    <if test="@Ognl@isNotEmpty(updatedateBegin)">
        AND UPDATEDATE >=#{updatedateBegin}
    </if>
    <if test="@Ognl@isNotEmpty(updatedateEnd)">
        AND UPDATEDATE &lt;=#{updatedateEnd}
    </if>
        </where>
        </sql>

<select id="Tcustomer.findPage.count" resultType="long">
SELECT count(*) FROM t_customer
<include refid="Tcustomer.findPage.where"/>
</select>

        <!--
            分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
            因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
        -->
<select id="Tcustomer.findPage" resultMap="RM.Tcustomer">
SELECT
<include refid="Tcustomer.columns"/>
FROM t_customer
<include refid="Tcustomer.findPage.where"/>

<if test="@Ognl@isNotEmpty(sortColumns)">
    ORDER BY${sortColumns}
</if>
</select>


        </mapper>

