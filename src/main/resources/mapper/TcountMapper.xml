        <?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper
                PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
                "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


        <!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Tcount">

<resultMap id="RM.Tcount" type="com.mam.model.Tcount">
    <result property="id" column="ID"/>
    <result property="createdate" column="CREATEDATE"/>
    <result property="updatedate" column="UPDATEDATE"/>
    <result property="forwordcount" column="FORWORDCOUNT"/>
    <result property="sharecount" column="SHARECOUNT"/>
    <result property="commentcount" column="COMMENTCOUNT"/>
    <result property="accesscount" column="ACCESSCOUNT"/>
    <result property="templateid" column="TEMPLATEID"/>
    <result property="activityid" column="ACTIVITYID"/>
    <result property="dayforwordcount" column="DAYFORWORDCOUNT"/>
    <result property="daysharecount" column="DAYSHARECOUNT"/>
    <result property="daycommentcount" column="DAYCOMMENTCOUNT"/>
</resultMap>

        <!-- 用于select查询公用抽取的列 -->
<sql id="Tcount.columns">
<![CDATA[
		ID,CREATEDATE,UPDATEDATE,FORWORDCOUNT,SHARECOUNT,COMMENTCOUNT,ACCESSCOUNT,TEMPLATEID,ACTIVITYID,DAYFORWORDCOUNT,DAYSHARECOUNT,DAYCOMMENTCOUNT
	    ]]>
</sql>

        <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
<insert id="Tcount.insert" useGeneratedKeys="true" keyProperty="id">
<![CDATA[
        INSERT INTO t_count (
         ID, CREATEDATE, UPDATEDATE, FORWORDCOUNT, SHARECOUNT, COMMENTCOUNT, ACCESSCOUNT, TEMPLATEID, ACTIVITYID, DAYFORWORDCOUNT, DAYSHARECOUNT, DAYCOMMENTCOUNT
        ) VALUES (
         #{id}, #{createdate}, #{updatedate}, #{forwordcount}, #{sharecount}, #{commentcount}, #{accesscount}, #{templateid}, #{activityid}, #{dayforwordcount}, #{daysharecount}, #{daycommentcount}        
        )
    ]]>
<!--
    oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL
    DB2: order="BEFORE"" values nextval for sequenceName
<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
    SELECT sequenceName.nextval AS ID FROM DUAL
</selectKey>
-->
</insert>

<update id="Tcount.update">
<![CDATA[
        UPDATE t_count SET
	        CREATEDATE = #{createdate} , UPDATEDATE = #{updatedate} , FORWORDCOUNT = #{forwordcount} , SHARECOUNT = #{sharecount} , COMMENTCOUNT = #{commentcount} , ACCESSCOUNT = #{accesscount} , TEMPLATEID = #{templateid} , ACTIVITYID = #{activityid} , DAYFORWORDCOUNT = #{dayforwordcount} , DAYSHARECOUNT = #{daysharecount} , DAYCOMMENTCOUNT = #{daycommentcount}  
        WHERE 
        	ID = #{id}  	        
    ]]>
</update>

<delete id="Tcount.delete">
<![CDATA[
        DELETE FROM t_count WHERE
        ID = #{id} 
    ]]>
</delete>

<select id="Tcount.getById" resultMap="RM.Tcount">
SELECT
<include refid="Tcount.columns"/>
<![CDATA[
		    FROM t_count 
	        WHERE 
		        ID = #{id} 
	    ]]>
</select>

<sql id="Tcount.findPage.where">
<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
<where>
    <if test="@Ognl@isNotEmpty(id)">
        AND ID =#{id}
    </if>
    <if test="@Ognl@isNotEmpty(createdateBegin)">
        AND CREATEDATE >=#{createdateBegin}
    </if>
    <if test="@Ognl@isNotEmpty(createdateEnd)">
        AND CREATEDATE &lt;=#{createdateEnd}
    </if>
    <if test="@Ognl@isNotEmpty(updatedateBegin)">
        AND UPDATEDATE >=#{updatedateBegin}
    </if>
    <if test="@Ognl@isNotEmpty(updatedateEnd)">
        AND UPDATEDATE &lt;=#{updatedateEnd}
    </if>
    <if test="@Ognl@isNotEmpty(forwordcount)">
        AND FORWORDCOUNT =#{forwordcount}
    </if>
    <if test="@Ognl@isNotEmpty(sharecount)">
        AND SHARECOUNT =#{sharecount}
    </if>
    <if test="@Ognl@isNotEmpty(commentcount)">
        AND COMMENTCOUNT =#{commentcount}
    </if>
    <if test="@Ognl@isNotEmpty(accesscount)">
        AND ACCESSCOUNT =#{accesscount}
    </if>
    <if test="@Ognl@isNotEmpty(templateid)">
        AND TEMPLATEID =#{templateid}
    </if>
    <if test="@Ognl@isNotEmpty(activityid)">
        AND ACTIVITYID =#{activityid}
    </if>
    <if test="@Ognl@isNotEmpty(dayforwordcount)">
        AND DAYFORWORDCOUNT =#{dayforwordcount}
    </if>
    <if test="@Ognl@isNotEmpty(daysharecount)">
        AND DAYSHARECOUNT =#{daysharecount}
    </if>
    <if test="@Ognl@isNotEmpty(daycommentcount)">
        AND DAYCOMMENTCOUNT =#{daycommentcount}
    </if>
        </where>
        </sql>

<select id="Tcount.findPage.count" resultType="long">
SELECT count(*) FROM t_count
<include refid="Tcount.findPage.where"/>
</select>

        <!--
            分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
            因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
        -->
<select id="Tcount.findPage" resultMap="RM.Tcount">
SELECT
<include refid="Tcount.columns"/>
FROM t_count
<include refid="Tcount.findPage.where"/>

<if test="@Ognl@isNotEmpty(sortColumns)">
    ORDER BY${sortColumns}
</if>
</select>


        </mapper>

